description = A dynamic placeholder for a component. The actual component to use \
	at runtime is chosen from the list of components specified by the {@link case} \
	sub-elements. The {@link case} elements are checked one by one in the order of their \
	declaration in the xml file. The first {@case} whose condition is {@tt true} defines \
	the component to display. \
	\n \n \
	This is quite similar to {@link cardLayout} but has a subtle but important difference \
	regarding the layout. A cardLayout takes into account all defined ('stacked') components, \
	e.g. it calculates its preferred size based on all of these components. A switch dynamically \
	switches the actual component in the Swing component hierarchy. Therefore Swing's layout \
	mechanism can only take into account the component currently visible.

attribute_default = Defines the default component to use if all conditionals evaluate to {@tt false}.
attribute_refresh = Only the event list of this attribute is used (no actual method call). \
	If a specified event is fired, the conditionals are evaluated again to chose the component \
	to display. The components are switched at runtime, so beware of the layout of your window.

case_description = Defines one possible component to use for the parent {@link switch} element. \
	The component can be nested inside this element or referenced via the {@tt id} attribute.
case_attribute_condition = If this condition is {@tt true}, the specified component might be chosen \
	as the current component to display.
case_attribute_id = You must specify either this attribute or define a nested component.
