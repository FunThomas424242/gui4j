description = \
  The cell table is a table which allows to format each individual cell independent \
  from all others. The number of rows and columns of the table must be \
  fix. Cells are then defined using a combination of row and column index.\
  \n \
  The table supports column headers and row headers.\n\
  Possible cell types are Boolean (displayed as checkboxes), images, strings, and comboboxes.

attribute_colSelectionMode = Defines the column selection mode
attribute_colSelectionMode_param_multiple = Multiple selection is allowed
attribute_colSelectionMode_param_single = Only single selection
attribute_colSelectionMode_param_singleInterval = Connected multiple selection

attribute_cols = The number of columns.
attribute_rows = The number of rows.

attribute_columnHeaders = Defines if column headers are displayed. For column headers to be shown the cellTable \
	must be placed inside a {@link scrollPane}.
attribute_columnHeaders_param_false = Do not display column headers
attribute_columnHeaders_param_true = Display column headers

attribute_onSetValue = Is called after a setter of any cell is called. This is usually used to \
   referesh other values of the same table or other tables.

attribute_refresh = Uses only the event part of the method call. If an event is fired, all cells \
   are requested to redisplay their value.

attribute_reorderingAllowed = Manual reordering of columns (this refers to the order \
	in which the columns appear in the table and not to the sort order of the table contents).
attribute_reorderingAllowed_param_false = Manual reordering of columns by the user is not allowed.
attribute_reorderingAllowed_param_true = Manual reordering of columns by the user is allowed.

attribute_rowHeaders = Defines if row headers are displayed
attribute_rowHeaders_param_false = Do not use row headers
attribute_rowHeaders_param_true = Display row headers

attribute_rowSelectionAllowed = Defines if rows can be selected
attribute_rowSelectionAllowed_param_false = Rows cannot be selected
attribute_rowSelectionAllowed_param_true = Selection of rows is possible

attribute_headerBackground = The background of the header

attribute_visibleRows = The preferred number of rows to be displayed.

attribute_rowSelectionMode = Defines the row selection mode
attribute_rowSelectionMode_param_multiple = Multiple row selection
attribute_rowSelectionMode_param_single = Single row selection
attribute_rowSelectionMode_param_singleInterval = Connected interval ofn rows

attribute_automaticRefresh = Defines if the table should refresh all cells after setValue was called
attribute_automaticRefresh_param_false = Do not automatically refresh table
attribute_automaticRefresh_param_true = Automatically refresh table after a setter was called

column_description = Defines column headers and column default values
column_attribute_col = The column index
column_attribute_alignment = The text aligmnet
column_attribute_alignment_param_leading = start to end alignment (usually left alignment)
column_attribute_alignment_param_trailing = end to start alignment (usually right alignment)
column_attribute_alignment_param_center = center alignment
column_attribute_alignment_param_left = left alignment
column_attribute_alignment_param_right = right alignment
column_attribute_background = The cell background
column_attribute_colValue = The column instance which can be used in {@link cell} definitions
column_attribute_enabled = Defines if the column is enabled. Cells are enabled if the column \
    is enabled and the cell is enabled. Hence, column disabled has priority.
column_attribute_font = The cell font
column_attribute_foreground = The cell foreground
column_attribute_name = The column header name
column_attribute_weight = The weight for the column width

row_description = Defines row header name and row default values
row_attribute_row = The row index
row_attribute_alignment = The text alignment
row_attribute_alignment_param_leading = start to end alignment (usually left alignment)
row_attribute_alignment_param_trailing = end to start alignment (usually right alignment)
row_attribute_alignment_param_center = center alignment
row_attribute_alignment_param_left = left alignment
row_attribute_alignment_param_right = right alignment
row_attribute_background = The cell background
row_attribute_font = The cell font
row_attribute_foreground = The cell foreground
row_attribute_indentation = The number of spaces before the row name
row_attribute_name = The row header name
row_attribute_rowValue = The row instance which can be used in {@link cell} definitions

cell_description = The combination of a row and column index. Used to define and format cell values.
cell_attribute_col = The column index
cell_attribute_row = The row index
cell_attribute_value = The value to be displayed.
cell_attribute_value_param_col = Column index (type {@b int})
cell_attribute_value_param_row = Row index (type {@b int})
cell_attribute_value_param_colValue = Column instance if defined in the {@link column} tag
cell_attribute_value_param_rowValue = Row instance if defined in the {@link row} tag
cell_attribute_value_param_list = If the list attribute is defined, this param returns that collection
cell_attribute_value_param_listItem = The selected item in the specified list
cell_attribute_alignment = The text alignment
cell_attribute_alignment_param_leading = start to end alignment (usually left alignment)
cell_attribute_alignment_param_trailing = end to start alignment (usually right alignment)
cell_attribute_alignment_param_center = center alignment
cell_attribute_alignment_param_left = left alignment
cell_attribute_alignment_param_right = right alignment
cell_attribute_background = The cell background
cell_attribute_enabled = Defines if the cell is enabled. Cells are enabled if the column is enabled \
   and the correspondig column is enabled.
cell_attribute_enabled_param_col = Column index (type {@b int})
cell_attribute_enabled_param_row = Row index (type {@b int})
cell_attribute_enabled_param_colValue = Column instance if defined in the {@link column} tag
cell_attribute_enabled_param_rowValue = Row instance if defined in the {@link row} tag
cell_attribute_enabled_param_list = If the list attribute is defined, this param returns that collection
cell_attribute_enabled_param_listItem = The selected item in the specified list
cell_attribute_font = The cell font
cell_attribute_foreground = The cell foreground
cell_attribute_list = If specified the cell displays a combobox with all entries
cell_attribute_list_param_col = The column number
cell_attribute_list_param_row = The row number
cell_attribute_list_param_colValue = The column instance if defined in the {@link column} tag
cell_attribute_list_param_rowValue = The row instance if defined in the {@link row} tag
cell_attribute_listEditable = Defines, if the combobox displaying the list entries allows \
   also to manually enter values. In such a case, the attribute {@b stringConvert} must \
   be defined to convert the entered (string) value to the list content type.
cell_attribute_listItem = The selected item
cell_attribute_listNullItem = If this attribute is specified, a {@tt null} entry is automatically added to \
   the beginning of the combobox content. The entry will appear in the list as the String value \
   defined by this attribute. The value parameter of setValue will be {@tt null} if this entry \
   is selected.
cell_attribute_listItem_param_col = The column number
cell_attribute_listItem_param_row = The row number
cell_attribute_listItem_param_colValue = The column instance if defined in the {@link column} tag
cell_attribute_listItem_param_rowValue = The row instance if defined in the {@link row} tag
cell_attribute_listItem_param_list = The specified list
cell_attribute_listType = The type of the list entries
cell_attribute_setValue = If defined, the cell is editable
cell_attribute_setValue_param_col = The column number
cell_attribute_setValue_param_row = The row number
cell_attribute_setValue_param_colValue = The column instance if defined in the {@link column} tag
cell_attribute_setValue_param_rowValue = The row instance if defined in the {@link row} tag
cell_attribute_setValue_param_list = The specified list
cell_attribute_setValue_param_value = The value to be set. If the list attribute was specified, \
   the param type is the content type of the list, otherwise it is a string instance.
cell_attribute_stringConvert = Convert a manually entered value in the combobox \
    (displaying the list entries) to the list content type
