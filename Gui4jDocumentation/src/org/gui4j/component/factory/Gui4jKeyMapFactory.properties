description = Represents a mapping of key strokes to actions (method calls). \
	A keymap can be referenced by \
	components using the {@tt keyMap} attribute which refers to a keyMap's {@tt guiId}.

input_description = Represents the input part of a key mapping. It maps a key stroke \
	either on a named action (see {@link action}) or directly to a method call.
input_attribute_action = The name of the {@link action} to trigger when this key stroke is triggered. \
	{@tt action} and {@tt actionCommand} should not be specified simultaneously.
input_attribute_actionCommand = Name of method to call when this key stroke is triggered. \
	{@tt action} and {@tt actionCommand} should not be specified simultaneously.

input_attribute_focusCondition = Specifies the condition under which this key stroke actually \
	triggers an action.
input_attribute_focusCondition_param_focused = Action is triggered if the component is currently \
	focused.
input_attribute_focusCondition_param_ancestor = Action is triggered if the component is an \
	ancestor (in the component hierarchy) of the component that is currently focused.
input_attribute_focusCondition_param_window = Action is triggered if the component is inside the \
	window that is currently focused.

input_attribute_stroke = The key stroke to react upon. The key stroke has to be specified in a \
	format compatible to {@tt javax.swing.KeyStroke.getKeyStroke(String s)}.

action_description = Named action. Defines a method to call when triggered. Is referenced \
	by {@link input} via its name.
action_attribute_actionCommand = Method to call when triggered.
action_attribute_name = Name of this action. Used to reference it from {@link input}s.

addKeyMap_description = Adds all {@link input} and {@link action} elements from the referenced \
	keyMap to this keyMap. With this feature, a simple "inheritance" for keyMaps can be implemented.
addKeyMap_attribute_id = Reference to another {@link keyMap} via its {@tt guiId}.
