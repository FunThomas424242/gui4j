description = Represents a JPanel using a GridBagLayout. The components are placed in this panel using {@link placeGbl}.

placeGbl_description = Defines a component for this panel. The component must either be referenced using \
	the {@tt id} attribute or be nested inside this tag.

placeGbl_attribute_id = Reference to the component to be placed here.

placeGbl_attribute_col = Number of the column to place this component into.
placeGbl_attribute_row = Number of the row to place this component into.

placeGbl_attribute_anchor = Specifies where in its display area the component should be placed.
placeGbl_attribute_anchor_param_center = Put the component in the center of its display area.
placeGbl_attribute_anchor_param_east = Put the component on the right side of its display area, centered vertically.
placeGbl_attribute_anchor_param_north = Put the component at the top of its display area, centered horizontally. 
placeGbl_attribute_anchor_param_northEast = Put the component at the top-right corner of its display area.
placeGbl_attribute_anchor_param_northWest = Put the component at the top-left corner of its display area.
placeGbl_attribute_anchor_param_south = Put the component at the bottom of its display area, centered horizontally. 
placeGbl_attribute_anchor_param_southEast = Put the component at the bottom-right corner of its display area.
placeGbl_attribute_anchor_param_southWest = Put the component at the bottom-left corner of its display area.
placeGbl_attribute_anchor_param_west = Put the component on the left side of its display area, centered vertically.

placeGbl_attribute_bottom = Specifies the minimum amount of space between the component \
	and the bottom of its display area.
placeGbl_attribute_left = Specifies the minimum amount of space between the component \
	and the left edge of its display area.
placeGbl_attribute_right = Specifies the minimum amount of space between the component \
	and the right edge  of its display area.
placeGbl_attribute_top = Specifies the minimum amount of space between the component \
	and the top of its display area.

placeGbl_attribute_height = Specifies the number of cells in a column to use as the component's display area. 
placeGbl_attribute_width = Specifies the number of cells in a row to use as the component's display area. 

placeGbl_attribute_fill = Used when the component's display area is larger than the component's \
	requested size. It determines whether to resize the component, and if so, how.
placeGbl_attribute_fill_param_both = Make the component fill its display area entirely.
placeGbl_attribute_fill_param_horizontal = Make the component wide enough to fill \
	its display area horizontally, but do not change its height.
placeGbl_attribute_fill_param_vertical = Make the component tall enough to fill its \
	display area vertically, but do not change its width.
placeGbl_attribute_fill_param_none = Do not resize the component.

placeGbl_attribute_ipadX = Specifies the internal padding of the component, how much \
	space to add to the minimum width of the component. The width of \
	the component is at least its minimum width plus {@tt ipadx}*2 pixels.
placeGbl_attribute_ipadY = Specifies the internal padding, that is, how much \
	space to add to the minimum height of the component. The height of \
	the component is at least its minimum height plus {@tt ipady}*2 pixels. 


placeGbl_attribute_weightX = Specifies how to distribute extra horizontal space. \
	The weight of a column is calculated as the maximum {@tt weightX} of all the components in a \
	column. If the resulting layout is smaller horizontally than the area \
	it needs to fill, the extra space is distributed to each column in \
	proportion to its weight. A column that has a weight of zero receives \
	no extra space. If all the weights are zero, all the extra space appears between \
	the grids of the cell and the left and right edges. 

placeGbl_attribute_weightY = Specifies how to distribute extra vertical space. \
	The weight of a row is calculated as the maximum {@tt weightY} of all the components in a row. \
	If the resulting layout is smaller vertically than the area it \
	needs to fill, the extra space is distributed to each row in \
	proportion to its weight. A row that has a weight of zero receives no \
	extra space. If all the weights are zero, all the extra space appears between \
	the grids of the cell and the top and bottom edges.

