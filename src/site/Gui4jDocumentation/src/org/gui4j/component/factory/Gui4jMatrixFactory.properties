description = Represents a table that is very flexible with respect to its content and dynamic behaviour. \
	For a matrix you define both the rows and columns by a collection of objects. These collections \
	may contain objects of different types. Cell content is then defined by \
	cell definitions for each combination of row and column object type.

attribute_columns = Specifies the collection which defines the columns of the matrix. \
	Different instance in the collection may be of different types and therefore cause different \
	cell definitions to be used for the column. \n \
	Note: Usage of {@tt content} instead of {@tt columns} is recommended.
attribute_rows = Specifies the collection which defines the rows of the matrix. \
	Different instance in the collection may be of different types and therefore cause different \
	cell definitions to be used for the row. \n \
	Note: Usage of {@tt content} instead of {@tt rows} is recommended.	
attribute_content = A pair of rows and columns: {@tt Pair(Collection rows,Collection columns)}. \
	Usage of this call to define the rows and coluns at once is preferred over the individual \
	{@tt columns} and {@tt row} definitions because it always ensures a consistent row/column \
	state in multi-threaded applications.

attribute_colSelectionMode = Defines the allowed column selection mode.
attribute_colSelectionMode_param_multiple = Allows multiple columns to be selected.
attribute_colSelectionMode_param_single = Allows only a single column to be selected at a time.
attribute_colSelectionMode_param_singleInterval = Allows multiple columns to be selected \
	but only if the selection forms a single consecutive interval.

attribute_columnHeaders = Specifies if column headers should be displayed. \n \
	Note: In order for column headers to be displayed the matrix has to be nested inside \
	a {@link scrollPane}.
attribute_columnHeaders_param_false = Do not show column headers.
attribute_columnHeaders_param_true = Show column headers.

attribute_headerBackground = Defines the background color for the column headers.
attribute_headerLines = Defines the number of lines (i.e. text rows) to display in the column headers.

attribute_refresh = Allows to define events that cause the matrix table contents to \
	be refreshed when fired.

attribute_reorderingAllowed = Specifies if the user is allowed to manually reorder the columns \
	of the table.
attribute_reorderingAllowed_param_false = Columns cannot be reordered manually.
attribute_reorderingAllowed_param_true = The user can manually reorder the columns.

attribute_resizeMode = Defines the resize mode to use when the user manually adjusts \
	the size of a column in the UI.
attribute_resizeMode_param_allColumns = During all resize operations, proportionately resize all columns.
attribute_resizeMode_param_lastColumn = During all resize operations, apply \
	adjustments to the last column only.
attribute_resizeMode_param_nextColumn = When a column is adjusted in the UI, \
	adjust the next column the opposite way.
attribute_resizeMode_param_off = Do not adjust column widths automatically; use a scrollbar.
attribute_resizeMode_param_subsequentColumns = During UI adjustment, change subsequent \
	columns to preserve the total width.

attribute_rowHeaders = Defines if row headers should be displayed.
attribute_rowHeaders_param_false = No row headers are displayed.
attribute_rowHeaders_param_true = Row headers are displayed.

attribute_rowSelectionAllowed = Defines if row selection is allowed, i.e. if complete \
	rows of the table may be selected at once.
attribute_rowSelectionAllowed_param_false = Row selection is not allowed.
attribute_rowSelectionAllowed_param_true = Row selection is allowed.

attribute_rowSelectionMode = Specifies the row selection mode to use.
attribute_rowSelectionMode_param_multiple = Allows multiple rows to be selected.
attribute_rowSelectionMode_param_single = Allows only one row to be selected at a time.
attribute_rowSelectionMode_param_singleInterval = Allows multiple rows to be selected, but only \
	if the selection forms a single consecutive interval of rows.

attribute_useCache = Defines if a result cache is used internally. If enabled, all results from the \
	individual method calls that define the cell contents are cached. As long as the cache is not \
	cleared, all subsequent calls for the value of a cell will be answered by the cache so that \
	the defined method call to the controller is only executed once. \n \
	The cache is cleared whenever the content (rows or columns) of the table are changed (this \
	includes an explicit {@tt refresh}).
attribute_useCache_param_false = No result cache is used.
attribute_useCache_param_true = A result cache is used.

attribute_visibleRows = The preferred number of visible rows for this matrix.

attribute_cellSelectionPair = The declared method must return an instance of class {@tt Pair}. \
	The first attribute contains a row instance and the second attribute \
	contains a column instance thereby defining the individual cell to be selected.

attribute_automaticRefresh = Defines if the table should refresh all cells after \
	{@tt setValue} was called for a cell.
attribute_automaticRefresh_param_false = Do not automatically refresh the table.
attribute_automaticRefresh_param_true = Automatically refresh table after setValue was called.

matrixCell_description = Defines the content of a cell in a {@link matrix}. This definition is used \
	for all cells having the specified combination of row and column types.

matrixCell_attribute_columnType = Column type for which to use this cell definition.
matrixCell_attribute_rowType = Row type for which to use this cell definition.

matrixCell_attribute_alignment = Defines the alignment of the content inside this cell.
matrixCell_attribute_alignment_param_allesRichtig = ???
matrixCell_attribute_alignment_param_center = Centered.
matrixCell_attribute_alignment_param_left = Left-aligned.
matrixCell_attribute_alignment_param_right = Right-aligned.

matrixCell_attribute_background = Defines the background color for this cell.
matrixCell_attribute_background_param_col = Column index.
matrixCell_attribute_background_param_colValue = Current column object.
matrixCell_attribute_background_param_row = Row index.
matrixCell_attribute_background_param_rowValue = Current row object.
matrixCell_attribute_background_param_value = Current cell value.

matrixCell_attribute_enabled = Defines if this cell is enabled for input.
matrixCell_attribute_enabled_param_col = Column index.
matrixCell_attribute_enabled_param_colValue = Current column object.
matrixCell_attribute_enabled_param_row = Row index.
matrixCell_attribute_enabled_param_rowValue = Current row object.

matrixCell_attribute_evenBackground = Defines a different backgorund color for all even rows.
matrixCell_attribute_font = Defined the font to use in this cell.
matrixCell_attribute_foreground = Defines the foreground color (i.e. the text color) to use in this cell.
matrixCell_attribute_foreground_param_col = Column index.
matrixCell_attribute_foreground_param_colValue = Current column object.
matrixCell_attribute_foreground_param_row = Row index.
matrixCell_attribute_foreground_param_rowValue = Current row object.
matrixCell_attribute_foreground_param_value = Current cell value.

matrixCell_attribute_list = Makes this cell a combobox providing the list of elements \
	defined by this method call.
matrixCell_attribute_listEditable = Specifies if the combobox-cell should allow values not \
	in the list of elements provided by {@tt list}. If the {@tt listType} is not {@tt String}, \
	you additionally need to specify {@tt stringConvert}.
	\n Only used if the cell is a combobox, i.e. {@tt list} is defined.
matrixCell_attribute_listItem = Allows the selected item to be changed programmatically. \
	\n Only used if the cell is a combobox, i.e. {@tt list} is defined.
matrixCell_attribute_listType = Specifies the type of the instances in the element list. \
	\n Only used if the cell is a combobox, i.e. {@tt list} is defined.
matrixCell_attribute_listNullItem = If this attribute is specified, a {@tt null} entry is automatically added to \
   the beginning of the combobox content. The entry will appear in the list as the String value \
   defined by this attribute. The value parameter of setValue will be {@tt null} if this entry \
   is selected.
matrixCell_attribute_stringConvert = Needed when the cell is defined as an editable combobox \
	(using {@tt list} and {@tt listEditable}) and the \
	{@tt listType} is not {@tt String}. In this case, the specified method is used to convert \
	the user's entries to the expected {@tt listType}. The method call can use {@tt ?} (the default \
	parameter) to refer to the user's entry.

matrixCell_attribute_onCellClick = This method is called when the cell is clicked on.
matrixCell_attribute_onCellClick_param_col = Column index.
matrixCell_attribute_onCellClick_param_colValue = Current column object.
matrixCell_attribute_onCellClick_param_row = Row index.
matrixCell_attribute_onCellClick_param_rowValue = Current row object.

matrixCell_attribute_onCellDblClick = This method is called when the cell is double-clicked on.
matrixCell_attribute_onCellDblClick_param_col = Column index.
matrixCell_attribute_onCellDblClick_param_colValue = Current column object.
matrixCell_attribute_onCellDblClick_param_row = Row index.
matrixCell_attribute_onCellDblClick_param_rowValue = Current row object.

matrixCell_attribute_onCellSelect = This method is called when the cell is selected.
matrixCell_attribute_onCellSelect_param_col = Column index.
matrixCell_attribute_onCellSelect_param_colValue = Current column object.
matrixCell_attribute_onCellSelect_param_row = Row index.
matrixCell_attribute_onCellSelect_param_rowValue = Current row object.

matrixCell_attribute_setValue = This method call is executed to save an edited cell value. \
	A cell value is saved as soon as the cell loses focus.
matrixCell_attribute_setValue_param_col = Column index.
matrixCell_attribute_setValue_param_colValue = Current column object.
matrixCell_attribute_setValue_param_row = Row index.
matrixCell_attribute_setValue_param_rowValue = Current row object.
matrixCell_attribute_setValue_param_value = Current cell value.



matrixCell_attribute_value = Defines the value to display in this cell. This is usually a {@tt String} but \
	does not have to be.
matrixCell_attribute_value_param_col = Column index.
matrixCell_attribute_value_param_colValue = Current column object.
matrixCell_attribute_value_param_row = Row index.
matrixCell_attribute_value_param_rowValue = Current row object.

matrixCell_attribute_tooltip = The tooltip for the cell.
matrixCell_attribute_tooltip_param_col = Column index.
matrixCell_attribute_tooltip_param_colValue = Current column object.
matrixCell_attribute_tooltip_param_row = Row index.
matrixCell_attribute_tooltip_param_rowValue = Current row object.

matrixCell_attribute_popupContext = Defines the context for the {@link popupMenu} defined \
	via the {@link matrix}'s common top-level attribute {@tt popup}.
matrixCell_attribute_popupContext_param_col = Column index.
matrixCell_attribute_popupContext_param_colValue = Current column object.
matrixCell_attribute_popupContext_param_row = Row index.
matrixCell_attribute_popupContext_param_rowValue = Current row object.

matrixCell_attribute_notifyTempValue = This method is called when the cell is in edit mode (not appilcable \
	for combobox cells). The method will be called immediately after each change to the text that \
	is being edited, i.e. after each keystroke.
matrixCell_attribute_notifyTempValue_param_col = Column index.
matrixCell_attribute_notifyTempValue_param_colValue = Current column object.
matrixCell_attribute_notifyTempValue_param_row = Row index.
matrixCell_attribute_notifyTempValue_param_rowValue = Current row object.
matrixCell_attribute_notifyTempValue_param_value = Current non-committed value that is being edited. \
	Note that if editing is cancelled (e.g. user presses ESC), {@tt setValue} will not be called \
	and the cell will display its previous value again.



matrixCol_description = The column definition for a specific column type in a {@link matrix}.
matrixCol_attribute_columnType = Specifies the type of column objects for which this definition \
	should be used.

matrixCol_attribute_alignment = Specifies the default alignment for all cells in this column.
matrixCol_attribute_alignment_param_allesRichtig = ???
matrixCol_attribute_alignment_param_center = Centered.
matrixCol_attribute_alignment_param_left = Left-aligned.
matrixCol_attribute_alignment_param_right = Right-aligned.

matrixCol_attribute_background = Specifies the default background color for all cells in this column.
matrixCol_attribute_background_param_col = Column index.
matrixCol_attribute_background_param_colValue = Current column object.

matrixCol_attribute_characters = Specifies the preferred width of the column. The given integer \
	denotes the number of characters {@tt 'M'}, in this column's font, that should fit in the column.
matrixCol_attribute_maxCharacters = Specifies the preferred and maximum size of the column. The given integer \
	denotes the number of characters {@tt 'M'}, in this column's font, that should fit in the column. The \
	GUI end user cannot make the column bigger than this specified maximum size.
matrixCol_attribute_columnName = Defines the name of the column which is shown in the column header.
matrixCol_attribute_evenBackground = Specifies the default background for the cells in this \
	column for even rows.
matrixCol_attribute_font = Specifies the font to use in this column.
matrixCol_attribute_foreground = Specifies the foreground color (i.e. text color) to use in this column.
matrixCol_attribute_foreground_param_col = Column index.
matrixCol_attribute_foreground_param_colValue = Current column object.

matrixCol_attribute_weight = Specifies the weight of this column. A column's weight controls the \
	column's width in relation to the other columns in the matrix. Weights come into play when initially \
	drawing the matrix and when a resizing operation in the UI affects several columns (depends on the \
	{@tt resizeMode} of the {@link matrix}).

matrixRow_description = The row definition for a specific row type in a {@link matrix}.
matrixRow_attribute_rowType = Specifies the type of row objects for which this definition \
	should be used.

matrixRow_attribute_alignment = Specifies the default alignment for all cells in this row.
matrixRow_attribute_alignment_param_allesRichtig = ???
matrixRow_attribute_alignment_param_center = Centered.
matrixRow_attribute_alignment_param_left = Left-aligned.
matrixRow_attribute_alignment_param_right = Right-aligned.

matrixRow_attribute_background = Specifies the default background color for all cells in this row.
matrixRow_attribute_background_param_row = Row index.
matrixRow_attribute_background_param_rowValue = Current row object.

matrixRow_attribute_evenBackground = Specifies the default background for the cells in this \
	column if it is an even row.
matrixRow_attribute_font = Specifies the default font to use for all cells in this row.
matrixRow_attribute_foreground = Specifies the default foreground color (i.e. text color) to use \
	for all cells in this row.
matrixRow_attribute_foreground_param_row = Row index.
matrixRow_attribute_foreground_param_rowValue = Current row object.

matrixRow_attribute_rowName = The name of this row. This will be displayed in the row header.

