attribute_border = The border of the component. \
    Borders can be created using the swing factory class {@tt BorderFactory}.
attribute_border_param_context = The context instance specified by the context attribute.

attribute_focusKeysForward = A comma separated list of keystrokes. This list overrides \
   the component's default set of keys that cause the keyboard focus to advance \
   to the next component in the focus cycle. \n \n \
   Keystrokes must be defined so they can be interpreted \
   by {@tt javax.swing.KeyStroke.getKeyStroke(String s)}. \
   \n \n \
   A typical usage is to redefine a text area's focus keys so that TAB is not interpreted \
   as a tab character inside the text but used to advance the focus as in simple text fields: \
   {@tt focusKeysForward="TAB, ctrl TAB"}
attribute_focusKeysBackward = A comma separated list of keystrokes. Similar to {@tt focusKeysForward} \
   but for advancing the focus backward.
   
attribute_grabFocus = If one of the specified events occurs and either the given method \
   returns {@b true} or no method is defined at all, the component will get the keyboard focus.
attribute_grabFocus_param_context = The context instance specified by the context attribute.

attribute_handleReadOnly = A window can be opened in readonly mode and modify mode. This attribute \
   defines whether the current component behaves as in the {@tt readonly} version if the readonly
   mode is set. For instance, in readonly mode, buttons or edit fields might be disabled.
attribute_handleReadOnly_param_false = Component does not distinguish between \
   readonly mode and modify mode.
attribute_handleReadOnly_param_true = Component behaves differently in \
   readonly mode and modify mode.
   
attribute_keyMapId = A reference to a {@link keyMap} for the component to use.
attribute_opaque = The opaque attribute of the component. If set to {@tt true}, the component \
	will draw its backgorund. If {@tt false}, the component will not draw its background, i.e. its \
	background is transparent.

attribute_tooltip = The tooltip of the component.
attribute_tooltip_param_context = The context instance specified by the context attribute.

